line-length = 100
target-version = "py310"

[lint]
select = [
    "A",    # flake8-builtins
    "ANN", # flake8-annotations
    "ARG",  # flake8-unused-arguments
    "B",    # Bugbear
    "C",
    "COM", # flake8-commas
#    "CPY",  # flake8-copyright
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
#    "D",    # pydocstyle, TODO: activate
    "E",    # pycodestyle errors
    "ERA",  # eradicate commented out code
    "F",    # pyflakes
#    "FA",   # flake8-future-annotations
#    "FBT",  # boolean traps
    "FLY",  # flynt
    "FURB", # refurb
    "G",    # flake8-logging-format
    "I",    # incomplete isort
    "INP",  # flake8-no-pep420
    "LOG",  # flake8-logging
    "N",    # naming
    "NPY",  # NumPy-specific rules
    "PD",   # pandas-vet
    "PERF", # Perflint
    "PL",   # Pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "RUF",  # Ruff-specific rules
    "S",    # bandit, security
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "T10",  # flake8-print
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
    "YTT",  # flake8-2020
]
ignore = [
    "INP001", # namespace
    "A001", # shadowing
    "ERA001", # commented-out code
    "S605", "S607", # allow os.system
]

exclude= [  # external projects

]

[lint.per-file-ignores]
# "*/tests/**" = ["ARG", "S", "D", "SLF001"]

[lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[lint.isort]
force-single-line = true

[lint.pyupgrade]
keep-runtime-typing = true

[format] # per default like Black
